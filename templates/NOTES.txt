{{- $namespace := include "elasticsearch-openshift.namespace" . }}
{{- $clusterName := include "elasticsearch-openshift.clusterName" . }}

🎉 Elasticsearch deployed successfully!

📋 **Connection Information:**

{{- if .Values.route.enabled }}
**External Access:**
   Elasticsearch: https://{{ .Values.route.host | default (printf "%s-es-%s.%s" (include "elasticsearch-openshift.fullname" .) .Release.Namespace (.Values.route.host | default "apps.example.com")) }}
{{- if and .Values.kibana.enabled .Values.kibana.route.enabled }}
   Kibana: https://{{ .Values.kibana.route.host | default (printf "%s-kibana-%s.%s" (include "elasticsearch-openshift.fullname" .) .Release.Namespace (.Values.route.host | default "apps.example.com")) }}
{{- end }}
{{- end }}

**Internal Access:**
   Elasticsearch: {{ include "elasticsearch-openshift.elasticsearch.serviceName" . }}.{{ $namespace }}.svc:9200
{{- if .Values.kibana.enabled }}
   Kibana: {{ include "elasticsearch-openshift.kibana.serviceName" . }}.{{ $namespace }}.svc:5601
{{- end }}

🔐 **Authentication:**
   Username: elastic
   Password: `oc get secret {{ $clusterName }}-es-elastic-user -n {{ $namespace }} -o jsonpath='{.data.elastic}' | base64 -d`

🔧 **Quick Commands:**
   Status: `oc get elasticsearch {{ $clusterName }} -n {{ $namespace }}`
{{- if .Values.kibana.enabled }}
   Kibana: `oc get kibana {{ $clusterName }}-kb -n {{ $namespace }}`
{{- end }}
   Pods: `oc get pods -n {{ $namespace }} -l cluster-name={{ $clusterName }}`
{{- if not .Values.kibana.enabled }}

📋 **Connection Information:**

{{- if .Values.route.enabled }}
**External Access:**
   Elasticsearch: https://{{ .Values.route.host | default (printf "%s-es-%s.%s" (include "elasticsearch-openshift.fullname" .) .Release.Namespace (.Values.route.host | default "apps.example.com")) }}
{{- end }}

**Internal Access:**
   Elasticsearch: {{ include "elasticsearch-openshift.elasticsearch.serviceName" . }}.{{ $namespace }}.svc:9200

🔐 **Authentication:**
   Username: elastic
   Password: `oc get secret {{ $clusterName }}-es-elastic-user -n {{ $namespace }} -o jsonpath='{.data.elastic}' | base64 -d`

🔧 **Quick Commands:**
   Status: `oc get elasticsearch {{ $clusterName }} -n {{ $namespace }}`
   Pods: `oc get pods -n {{ $namespace }} -l cluster-name={{ $clusterName }}`
{{- end }} 